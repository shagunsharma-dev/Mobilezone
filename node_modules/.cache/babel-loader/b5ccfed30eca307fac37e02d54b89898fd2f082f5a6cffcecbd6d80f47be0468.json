{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst UseAuth = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = (username, password) => {\n    // Simulate authentication logic\n    if (username === \"user\" && password === \"password\") {\n      setIsLoggedIn(true);\n    } else {\n      // Display an error message or handle authentication failure\n      alert(\"Incorrect username or password\");\n    }\n  };\n  return {\n    isLoggedIn,\n    login\n  };\n};\n_s(UseAuth, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = UseAuth;\nexport default UseAuth;\nvar _c;\n$RefreshReg$(_c, \"UseAuth\");","map":{"version":3,"names":["useState","UseAuth","_s","isLoggedIn","setIsLoggedIn","login","username","password","alert","_c","$RefreshReg$"],"sources":["C:/Users/ritti/Downloads/Mobilzone-main/Mobilzone-main/src/components/Layout/Navigations/Login.js"],"sourcesContent":["   \nimport { useState } from \"react\";\n\nconst UseAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = (username, password) => {\n    // Simulate authentication logic\n    if (username === \"user\" && password === \"password\") {\n      setIsLoggedIn(true);\n    } else {\n      // Display an error message or handle authentication failure\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return {\n    isLoggedIn,\n    login,\n  };\n};\n\nexport default UseAuth;\n"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,IAAID,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAClDH,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACL;MACAI,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,OAAO;IACLL,UAAU;IACVE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAjBID,OAAO;AAAAQ,EAAA,GAAPR,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}