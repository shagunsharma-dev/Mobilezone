{"ast":null,"code":"import{useState}from\"react\";const UseAuth=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const login=(username,password)=>{// Simulate authentication logic\nif(username===\"user\"&&password===\"password\"){setIsLoggedIn(true);}else{// Display an error message or handle authentication failure\nalert(\"Incorrect username or password\");}};return{isLoggedIn,login};};export default UseAuth;","map":{"version":3,"names":["useState","UseAuth","isLoggedIn","setIsLoggedIn","login","username","password","alert"],"sources":["C:/Users/ritti/Downloads/Mobilzone-main/Mobilzone-main/src/components/Layout/UseAuth.js"],"sourcesContent":["   \nimport { useState } from \"react\";\n\nconst UseAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = (username, password) => {\n    // Simulate authentication logic\n    if (username === \"user\" && password === \"password\") {\n      setIsLoggedIn(true);\n    } else {\n      // Display an error message or handle authentication failure\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return {\n    isLoggedIn,\n    login,\n  };\n};\n\nexport default UseAuth;\n"],"mappings":"AACA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGH,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAI,KAAK,CAAGA,CAACC,QAAQ,CAAEC,QAAQ,GAAK,CACpC;AACA,GAAID,QAAQ,GAAK,MAAM,EAAIC,QAAQ,GAAK,UAAU,CAAE,CAClDH,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,IAAM,CACL;AACAI,KAAK,CAAC,gCAAgC,CAAC,CACzC,CACF,CAAC,CAED,MAAO,CACLL,UAAU,CACVE,KACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}